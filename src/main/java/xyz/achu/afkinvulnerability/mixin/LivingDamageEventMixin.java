package xyz.achu.afkinvulnerability.mixin;

import net.minecraft.server.level.ServerPlayer;
import net.minecraft.world.entity.LivingEntity;
import net.minecraftforge.event.entity.living.LivingDamageEvent;
import net.minecraftforge.event.entity.living.LivingEvent;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Inject;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;
import xyz.achu.afkinvulnerability.PlayerLogic;

@Mixin(value = LivingDamageEvent.class,
        remap = false // Turns out, this class isn't obfuscated
)
public abstract class LivingDamageEventMixin extends LivingEvent {
    public LivingDamageEventMixin(LivingEntity entity) {
        super(entity);
    }

    @Inject(method = "getAmount", at = @At("TAIL"), cancellable = true)
    public void getAmountMixin(CallbackInfoReturnable<Float> cir) {
        LivingEntity attackTarget = this.getEntityLiving();
        if (attackTarget instanceof ServerPlayer player) {
            if (PlayerLogic.playerIsAFK(player)) {
                cir.setReturnValue(0.0F);
            }
        }
    }
}