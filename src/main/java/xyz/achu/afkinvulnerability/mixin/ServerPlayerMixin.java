package xyz.achu.afkinvulnerability.mixin;

import com.mojang.authlib.GameProfile;
import net.minecraft.server.MinecraftServer;
import net.minecraft.server.level.ServerLevel;
import net.minecraft.server.level.ServerPlayer;
import net.minecraft.world.damagesource.DamageSource;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Inject;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;
import xyz.achu.afkinvulnerability.PlayerLogic;

@Mixin(ServerPlayer.class)
public abstract class ServerPlayerMixin extends ServerPlayer {

    public ServerPlayerMixin(MinecraftServer minecraftServer, ServerLevel arg, GameProfile gameProfile) {
        super(minecraftServer, arg, gameProfile);
    }

    @Inject(method = "hurt", at = @At("HEAD"), cancellable = true)
    public void hurtMixin(DamageSource damageSource, float f, CallbackInfoReturnable<Boolean> cir) {
        if (PlayerLogic.isPlayerAFK((ServerPlayer)this)) {
            cir.setReturnValue(false);
        }
    }

    // TODO: add something that injects into tick, or something
    // TODO: runs semi-regularly -- via debounce var, and sets player invisibility status via updateInvisibilityStatus()
    // TODO: must add code in updateInvisibilityStatus() for making invisible when player is detected to be AFK
    // TODO: this way, we don't have to worry about accidentally making spectator-mode players visible, or something dumb like that

}
