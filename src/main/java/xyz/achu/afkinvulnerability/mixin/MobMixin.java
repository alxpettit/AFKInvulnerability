package xyz.achu.afkinvulnerability.mixin;

import net.minecraft.server.level.ServerPlayer;
import net.minecraft.world.entity.LivingEntity;
import net.minecraft.world.entity.Mob;
import net.minecraft.world.entity.ai.goal.target.NearestAttackableTargetGoal;
import net.minecraft.world.entity.ai.targeting.TargetingConditions;
import net.minecraft.world.entity.player.Player;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.Shadow;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Inject;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;
import xyz.achu.afkinvulnerability.ModMain;
import xyz.achu.afkinvulnerability.PlayerLogic;

import javax.annotation.Nullable;
//
//@Mixin(TargetingConditions.class)
//abstract class TargetingConditionsMixin {
//    @Inject(method = "test", at = @At("HEAD"), cancellable = true)
//    public void testMixin(LivingEntity self, LivingEntity target, CallbackInfoReturnable<Boolean> cir) {
//        ModMain.LOGGER.info("nuuuuu ;-;");
//        if (target instanceof Player serverPlayer) {
//            cir.setReturnValue(false);
////            if (PlayerLogic.playerIsAFK(serverPlayer)) {
////                cir.setReturnValue(false);
////            }
//        }
//    }
//}

@Mixin(Mob.class)
abstract class MobMixin {
    @Inject(method = "setTarget", at = @At("HEAD"), cancellable = true)
    public void setTargetMixin(@Nullable LivingEntity target, CallbackInfo ci) {
        if (target instanceof ServerPlayer serverPlayer) {
            if (PlayerLogic.isPlayerAFK((ServerPlayer)target)) {
                ci.cancel();
            }
        }
    }
}